{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.default = void 0;\n\nvar _propertyExpr = require(\"property-expr\");\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\n\nfunction create(key, options) {\n  return new Reference(key, options);\n}\n\nclass Reference {\n  constructor(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && (0, _propertyExpr.getter)(this.path, true);\n    this.map = options.map;\n  }\n\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n\n\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n\n  resolve() {\n    return this;\n  }\n\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n\n  toString() {\n    return `Ref(${this.key})`;\n  }\n\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n\n} // @ts-ignore\n\n\nexports.default = Reference;\nReference.prototype.__isYupRef = true;","map":{"version":3,"names":["Object","defineProperty","exports","value","create","default","_propertyExpr","require","prefixes","context","key","options","Reference","constructor","isContext","isValue","isSibling","path","getter","map","TypeError","trim","prefix","slice","length","getValue","parent","result","cast","resolve","describe","type","toString","isRef","__isYupRef","prototype"],"sources":["C:/Users/fredr/OneDrive/Documents/GitHub/viken_boligentrepenor_v2/node_modules/yup/lib/Reference.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.default = void 0;\n\nvar _propertyExpr = require(\"property-expr\");\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\n\nfunction create(key, options) {\n  return new Reference(key, options);\n}\n\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && (0, _propertyExpr.getter)(this.path, true);\n    this.map = options.map;\n  }\n\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n\n\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n\n  resolve() {\n    return this;\n  }\n\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n\n  toString() {\n    return `Ref(${this.key})`;\n  }\n\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n\n} // @ts-ignore\n\n\nexports.default = Reference;\nReference.prototype.__isYupRef = true;"],"mappings":"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"},"metadata":{},"sourceType":"script"}